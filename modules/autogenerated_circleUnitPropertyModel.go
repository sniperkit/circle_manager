package modules

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set CircleUnitPropertyQuerySet

// CircleUnitPropertyQuerySet is an queryset type for CircleUnitProperty
type CircleUnitPropertyQuerySet struct {
	db *gorm.DB
}

// NewCircleUnitPropertyQuerySet constructs new CircleUnitPropertyQuerySet
func NewCircleUnitPropertyQuerySet(db *gorm.DB) CircleUnitPropertyQuerySet {
	return CircleUnitPropertyQuerySet{
		db: db.Model(&CircleUnitProperty{}),
	}
}

func (qs CircleUnitPropertyQuerySet) w(db *gorm.DB) CircleUnitPropertyQuerySet {
	return NewCircleUnitPropertyQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) All(ret *[]CircleUnitProperty) error {
	return qs.db.Find(ret).Error
}

// CircleUnitIDEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CircleUnitIDEq(circleUnitID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("circle_unit_id = ?", circleUnitID))
}

// CircleUnitIDGt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CircleUnitIDGt(circleUnitID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("circle_unit_id > ?", circleUnitID))
}

// CircleUnitIDGte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CircleUnitIDGte(circleUnitID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("circle_unit_id >= ?", circleUnitID))
}

// CircleUnitIDIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CircleUnitIDIn(circleUnitID uint, circleUnitIDRest ...uint) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{circleUnitID}
	for _, arg := range circleUnitIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("circle_unit_id IN (?)", iArgs))
}

// CircleUnitIDLt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CircleUnitIDLt(circleUnitID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("circle_unit_id < ?", circleUnitID))
}

// CircleUnitIDLte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CircleUnitIDLte(circleUnitID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("circle_unit_id <= ?", circleUnitID))
}

// CircleUnitIDNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CircleUnitIDNe(circleUnitID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("circle_unit_id != ?", circleUnitID))
}

// CircleUnitIDNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CircleUnitIDNotIn(circleUnitID uint, circleUnitIDRest ...uint) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{circleUnitID}
	for _, arg := range circleUnitIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("circle_unit_id NOT IN (?)", iArgs))
}

// Count is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *CircleUnitProperty) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatebleUserExcludeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeIDsEq(createbleUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_exclude_ids = ?", createbleUserExcludeIDs))
}

// CreatebleUserExcludeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeIDsIn(createbleUserExcludeIDs string, createbleUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserExcludeIDs}
	for _, arg := range createbleUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_exclude_ids IN (?)", iArgs))
}

// CreatebleUserExcludeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeIDsNe(createbleUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_exclude_ids != ?", createbleUserExcludeIDs))
}

// CreatebleUserExcludeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeIDsNotIn(createbleUserExcludeIDs string, createbleUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserExcludeIDs}
	for _, arg := range createbleUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_exclude_ids NOT IN (?)", iArgs))
}

// CreatebleUserExcludeStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeStatusIDsEq(createbleUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_exclude_status_ids = ?", createbleUserExcludeStatusIDs))
}

// CreatebleUserExcludeStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeStatusIDsIn(createbleUserExcludeStatusIDs string, createbleUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserExcludeStatusIDs}
	for _, arg := range createbleUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_exclude_status_ids IN (?)", iArgs))
}

// CreatebleUserExcludeStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeStatusIDsNe(createbleUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_exclude_status_ids != ?", createbleUserExcludeStatusIDs))
}

// CreatebleUserExcludeStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeStatusIDsNotIn(createbleUserExcludeStatusIDs string, createbleUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserExcludeStatusIDs}
	for _, arg := range createbleUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_exclude_status_ids NOT IN (?)", iArgs))
}

// CreatebleUserExcludeTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeTypeIDsEq(createbleUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_exclude_type_ids = ?", createbleUserExcludeTypeIDs))
}

// CreatebleUserExcludeTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeTypeIDsIn(createbleUserExcludeTypeIDs string, createbleUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserExcludeTypeIDs}
	for _, arg := range createbleUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_exclude_type_ids IN (?)", iArgs))
}

// CreatebleUserExcludeTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeTypeIDsNe(createbleUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_exclude_type_ids != ?", createbleUserExcludeTypeIDs))
}

// CreatebleUserExcludeTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserExcludeTypeIDsNotIn(createbleUserExcludeTypeIDs string, createbleUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserExcludeTypeIDs}
	for _, arg := range createbleUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_exclude_type_ids NOT IN (?)", iArgs))
}

// CreatebleUserIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserIDsEq(createbleUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_ids = ?", createbleUserIDs))
}

// CreatebleUserIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserIDsIn(createbleUserIDs string, createbleUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserIDs}
	for _, arg := range createbleUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_ids IN (?)", iArgs))
}

// CreatebleUserIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserIDsNe(createbleUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_ids != ?", createbleUserIDs))
}

// CreatebleUserIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserIDsNotIn(createbleUserIDs string, createbleUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserIDs}
	for _, arg := range createbleUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_ids NOT IN (?)", iArgs))
}

// CreatebleUserStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserStatusIDsEq(createbleUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_status_ids = ?", createbleUserStatusIDs))
}

// CreatebleUserStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserStatusIDsIn(createbleUserStatusIDs string, createbleUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserStatusIDs}
	for _, arg := range createbleUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_status_ids IN (?)", iArgs))
}

// CreatebleUserStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserStatusIDsNe(createbleUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_status_ids != ?", createbleUserStatusIDs))
}

// CreatebleUserStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserStatusIDsNotIn(createbleUserStatusIDs string, createbleUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserStatusIDs}
	for _, arg := range createbleUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_status_ids NOT IN (?)", iArgs))
}

// CreatebleUserTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserTypeIDsEq(createbleUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_type_ids = ?", createbleUserTypeIDs))
}

// CreatebleUserTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserTypeIDsIn(createbleUserTypeIDs string, createbleUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserTypeIDs}
	for _, arg := range createbleUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_type_ids IN (?)", iArgs))
}

// CreatebleUserTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserTypeIDsNe(createbleUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("createble_user_type_ids != ?", createbleUserTypeIDs))
}

// CreatebleUserTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatebleUserTypeIDsNotIn(createbleUserTypeIDs string, createbleUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{createbleUserTypeIDs}
	for _, arg := range createbleUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("createble_user_type_ids NOT IN (?)", iArgs))
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatedAtEq(createdAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatedAtGt(createdAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatedAtGte(createdAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatedAtLt(createdAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatedAtLte(createdAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatedAtNe(createdAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// CreatorIDEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatorIDEq(creatorID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("creator_id = ?", creatorID))
}

// CreatorIDGt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatorIDGt(creatorID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("creator_id > ?", creatorID))
}

// CreatorIDGte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatorIDGte(creatorID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("creator_id >= ?", creatorID))
}

// CreatorIDIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatorIDIn(creatorID uint, creatorIDRest ...uint) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{creatorID}
	for _, arg := range creatorIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("creator_id IN (?)", iArgs))
}

// CreatorIDLt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatorIDLt(creatorID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("creator_id < ?", creatorID))
}

// CreatorIDLte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatorIDLte(creatorID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("creator_id <= ?", creatorID))
}

// CreatorIDNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatorIDNe(creatorID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("creator_id != ?", creatorID))
}

// CreatorIDNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) CreatorIDNotIn(creatorID uint, creatorIDRest ...uint) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{creatorID}
	for _, arg := range creatorIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("creator_id NOT IN (?)", iArgs))
}

// DeletableUserExcludeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeIDsEq(deletableUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_exclude_ids = ?", deletableUserExcludeIDs))
}

// DeletableUserExcludeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeIDsIn(deletableUserExcludeIDs string, deletableUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserExcludeIDs}
	for _, arg := range deletableUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_exclude_ids IN (?)", iArgs))
}

// DeletableUserExcludeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeIDsNe(deletableUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_exclude_ids != ?", deletableUserExcludeIDs))
}

// DeletableUserExcludeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeIDsNotIn(deletableUserExcludeIDs string, deletableUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserExcludeIDs}
	for _, arg := range deletableUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_exclude_ids NOT IN (?)", iArgs))
}

// DeletableUserExcludeStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeStatusIDsEq(deletableUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_exclude_status_ids = ?", deletableUserExcludeStatusIDs))
}

// DeletableUserExcludeStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeStatusIDsIn(deletableUserExcludeStatusIDs string, deletableUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserExcludeStatusIDs}
	for _, arg := range deletableUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_exclude_status_ids IN (?)", iArgs))
}

// DeletableUserExcludeStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeStatusIDsNe(deletableUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_exclude_status_ids != ?", deletableUserExcludeStatusIDs))
}

// DeletableUserExcludeStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeStatusIDsNotIn(deletableUserExcludeStatusIDs string, deletableUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserExcludeStatusIDs}
	for _, arg := range deletableUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_exclude_status_ids NOT IN (?)", iArgs))
}

// DeletableUserExcludeTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeTypeIDsEq(deletableUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_exclude_type_ids = ?", deletableUserExcludeTypeIDs))
}

// DeletableUserExcludeTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeTypeIDsIn(deletableUserExcludeTypeIDs string, deletableUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserExcludeTypeIDs}
	for _, arg := range deletableUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_exclude_type_ids IN (?)", iArgs))
}

// DeletableUserExcludeTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeTypeIDsNe(deletableUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_exclude_type_ids != ?", deletableUserExcludeTypeIDs))
}

// DeletableUserExcludeTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserExcludeTypeIDsNotIn(deletableUserExcludeTypeIDs string, deletableUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserExcludeTypeIDs}
	for _, arg := range deletableUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_exclude_type_ids NOT IN (?)", iArgs))
}

// DeletableUserIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserIDsEq(deletableUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_ids = ?", deletableUserIDs))
}

// DeletableUserIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserIDsIn(deletableUserIDs string, deletableUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserIDs}
	for _, arg := range deletableUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_ids IN (?)", iArgs))
}

// DeletableUserIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserIDsNe(deletableUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_ids != ?", deletableUserIDs))
}

// DeletableUserIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserIDsNotIn(deletableUserIDs string, deletableUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserIDs}
	for _, arg := range deletableUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_ids NOT IN (?)", iArgs))
}

// DeletableUserStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserStatusIDsEq(deletableUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_status_ids = ?", deletableUserStatusIDs))
}

// DeletableUserStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserStatusIDsIn(deletableUserStatusIDs string, deletableUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserStatusIDs}
	for _, arg := range deletableUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_status_ids IN (?)", iArgs))
}

// DeletableUserStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserStatusIDsNe(deletableUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_status_ids != ?", deletableUserStatusIDs))
}

// DeletableUserStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserStatusIDsNotIn(deletableUserStatusIDs string, deletableUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserStatusIDs}
	for _, arg := range deletableUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_status_ids NOT IN (?)", iArgs))
}

// DeletableUserTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserTypeIDsEq(deletableUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_type_ids = ?", deletableUserTypeIDs))
}

// DeletableUserTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserTypeIDsIn(deletableUserTypeIDs string, deletableUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserTypeIDs}
	for _, arg := range deletableUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_type_ids IN (?)", iArgs))
}

// DeletableUserTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserTypeIDsNe(deletableUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("deletable_user_type_ids != ?", deletableUserTypeIDs))
}

// DeletableUserTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DeletableUserTypeIDsNotIn(deletableUserTypeIDs string, deletableUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{deletableUserTypeIDs}
	for _, arg := range deletableUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("deletable_user_type_ids NOT IN (?)", iArgs))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) Delete() error {
	return qs.db.Delete(CircleUnitProperty{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *CircleUnitProperty) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DescriptionEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DescriptionEq(description string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("description = ?", description))
}

// DescriptionIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DescriptionIn(description string, descriptionRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{description}
	for _, arg := range descriptionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("description IN (?)", iArgs))
}

// DescriptionNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DescriptionNe(description string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("description != ?", description))
}

// DescriptionNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) DescriptionNotIn(description string, descriptionRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{description}
	for _, arg := range descriptionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("description NOT IN (?)", iArgs))
}

// GetAllableUserExcludeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeIDsEq(getAllableUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_exclude_ids = ?", getAllableUserExcludeIDs))
}

// GetAllableUserExcludeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeIDsIn(getAllableUserExcludeIDs string, getAllableUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserExcludeIDs}
	for _, arg := range getAllableUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_exclude_ids IN (?)", iArgs))
}

// GetAllableUserExcludeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeIDsNe(getAllableUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_exclude_ids != ?", getAllableUserExcludeIDs))
}

// GetAllableUserExcludeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeIDsNotIn(getAllableUserExcludeIDs string, getAllableUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserExcludeIDs}
	for _, arg := range getAllableUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_exclude_ids NOT IN (?)", iArgs))
}

// GetAllableUserExcludeStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeStatusIDsEq(getAllableUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_exclude_status_ids = ?", getAllableUserExcludeStatusIDs))
}

// GetAllableUserExcludeStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeStatusIDsIn(getAllableUserExcludeStatusIDs string, getAllableUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserExcludeStatusIDs}
	for _, arg := range getAllableUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_exclude_status_ids IN (?)", iArgs))
}

// GetAllableUserExcludeStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeStatusIDsNe(getAllableUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_exclude_status_ids != ?", getAllableUserExcludeStatusIDs))
}

// GetAllableUserExcludeStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeStatusIDsNotIn(getAllableUserExcludeStatusIDs string, getAllableUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserExcludeStatusIDs}
	for _, arg := range getAllableUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_exclude_status_ids NOT IN (?)", iArgs))
}

// GetAllableUserExcludeTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeTypeIDsEq(getAllableUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_exclude_type_ids = ?", getAllableUserExcludeTypeIDs))
}

// GetAllableUserExcludeTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeTypeIDsIn(getAllableUserExcludeTypeIDs string, getAllableUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserExcludeTypeIDs}
	for _, arg := range getAllableUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_exclude_type_ids IN (?)", iArgs))
}

// GetAllableUserExcludeTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeTypeIDsNe(getAllableUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_exclude_type_ids != ?", getAllableUserExcludeTypeIDs))
}

// GetAllableUserExcludeTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserExcludeTypeIDsNotIn(getAllableUserExcludeTypeIDs string, getAllableUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserExcludeTypeIDs}
	for _, arg := range getAllableUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_exclude_type_ids NOT IN (?)", iArgs))
}

// GetAllableUserIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserIDsEq(getAllableUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_ids = ?", getAllableUserIDs))
}

// GetAllableUserIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserIDsIn(getAllableUserIDs string, getAllableUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserIDs}
	for _, arg := range getAllableUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_ids IN (?)", iArgs))
}

// GetAllableUserIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserIDsNe(getAllableUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_ids != ?", getAllableUserIDs))
}

// GetAllableUserIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserIDsNotIn(getAllableUserIDs string, getAllableUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserIDs}
	for _, arg := range getAllableUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_ids NOT IN (?)", iArgs))
}

// GetAllableUserStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserStatusIDsEq(getAllableUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_status_ids = ?", getAllableUserStatusIDs))
}

// GetAllableUserStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserStatusIDsIn(getAllableUserStatusIDs string, getAllableUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserStatusIDs}
	for _, arg := range getAllableUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_status_ids IN (?)", iArgs))
}

// GetAllableUserStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserStatusIDsNe(getAllableUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_status_ids != ?", getAllableUserStatusIDs))
}

// GetAllableUserStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserStatusIDsNotIn(getAllableUserStatusIDs string, getAllableUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserStatusIDs}
	for _, arg := range getAllableUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_status_ids NOT IN (?)", iArgs))
}

// GetAllableUserTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserTypeIDsEq(getAllableUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_type_ids = ?", getAllableUserTypeIDs))
}

// GetAllableUserTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserTypeIDsIn(getAllableUserTypeIDs string, getAllableUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserTypeIDs}
	for _, arg := range getAllableUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_type_ids IN (?)", iArgs))
}

// GetAllableUserTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserTypeIDsNe(getAllableUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_allable_user_type_ids != ?", getAllableUserTypeIDs))
}

// GetAllableUserTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetAllableUserTypeIDsNotIn(getAllableUserTypeIDs string, getAllableUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getAllableUserTypeIDs}
	for _, arg := range getAllableUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_allable_user_type_ids NOT IN (?)", iArgs))
}

// GetOneableUserExcludeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeIDsEq(getOneableUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_exclude_ids = ?", getOneableUserExcludeIDs))
}

// GetOneableUserExcludeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeIDsIn(getOneableUserExcludeIDs string, getOneableUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserExcludeIDs}
	for _, arg := range getOneableUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_exclude_ids IN (?)", iArgs))
}

// GetOneableUserExcludeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeIDsNe(getOneableUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_exclude_ids != ?", getOneableUserExcludeIDs))
}

// GetOneableUserExcludeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeIDsNotIn(getOneableUserExcludeIDs string, getOneableUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserExcludeIDs}
	for _, arg := range getOneableUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_exclude_ids NOT IN (?)", iArgs))
}

// GetOneableUserExcludeStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeStatusIDsEq(getOneableUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_exclude_status_ids = ?", getOneableUserExcludeStatusIDs))
}

// GetOneableUserExcludeStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeStatusIDsIn(getOneableUserExcludeStatusIDs string, getOneableUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserExcludeStatusIDs}
	for _, arg := range getOneableUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_exclude_status_ids IN (?)", iArgs))
}

// GetOneableUserExcludeStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeStatusIDsNe(getOneableUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_exclude_status_ids != ?", getOneableUserExcludeStatusIDs))
}

// GetOneableUserExcludeStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeStatusIDsNotIn(getOneableUserExcludeStatusIDs string, getOneableUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserExcludeStatusIDs}
	for _, arg := range getOneableUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_exclude_status_ids NOT IN (?)", iArgs))
}

// GetOneableUserExcludeTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeTypeIDsEq(getOneableUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_exclude_type_ids = ?", getOneableUserExcludeTypeIDs))
}

// GetOneableUserExcludeTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeTypeIDsIn(getOneableUserExcludeTypeIDs string, getOneableUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserExcludeTypeIDs}
	for _, arg := range getOneableUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_exclude_type_ids IN (?)", iArgs))
}

// GetOneableUserExcludeTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeTypeIDsNe(getOneableUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_exclude_type_ids != ?", getOneableUserExcludeTypeIDs))
}

// GetOneableUserExcludeTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserExcludeTypeIDsNotIn(getOneableUserExcludeTypeIDs string, getOneableUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserExcludeTypeIDs}
	for _, arg := range getOneableUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_exclude_type_ids NOT IN (?)", iArgs))
}

// GetOneableUserIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserIDsEq(getOneableUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_ids = ?", getOneableUserIDs))
}

// GetOneableUserIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserIDsIn(getOneableUserIDs string, getOneableUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserIDs}
	for _, arg := range getOneableUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_ids IN (?)", iArgs))
}

// GetOneableUserIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserIDsNe(getOneableUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_ids != ?", getOneableUserIDs))
}

// GetOneableUserIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserIDsNotIn(getOneableUserIDs string, getOneableUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserIDs}
	for _, arg := range getOneableUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_ids NOT IN (?)", iArgs))
}

// GetOneableUserStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserStatusIDsEq(getOneableUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_status_ids = ?", getOneableUserStatusIDs))
}

// GetOneableUserStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserStatusIDsIn(getOneableUserStatusIDs string, getOneableUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserStatusIDs}
	for _, arg := range getOneableUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_status_ids IN (?)", iArgs))
}

// GetOneableUserStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserStatusIDsNe(getOneableUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_status_ids != ?", getOneableUserStatusIDs))
}

// GetOneableUserStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserStatusIDsNotIn(getOneableUserStatusIDs string, getOneableUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserStatusIDs}
	for _, arg := range getOneableUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_status_ids NOT IN (?)", iArgs))
}

// GetOneableUserTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserTypeIDsEq(getOneableUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_type_ids = ?", getOneableUserTypeIDs))
}

// GetOneableUserTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserTypeIDsIn(getOneableUserTypeIDs string, getOneableUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserTypeIDs}
	for _, arg := range getOneableUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_type_ids IN (?)", iArgs))
}

// GetOneableUserTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserTypeIDsNe(getOneableUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("get_oneable_user_type_ids != ?", getOneableUserTypeIDs))
}

// GetOneableUserTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetOneableUserTypeIDsNotIn(getOneableUserTypeIDs string, getOneableUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{getOneableUserTypeIDs}
	for _, arg := range getOneableUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("get_oneable_user_type_ids NOT IN (?)", iArgs))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) GetUpdater() CircleUnitPropertyUpdater {
	return NewCircleUnitPropertyUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IDEq(ID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IDGt(ID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IDGte(ID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IDIn(ID uint, IDRest ...uint) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IDLt(ID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IDLte(ID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IDNe(ID uint) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IDNotIn(ID uint, IDRest ...uint) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// IsCreatebleEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsCreatebleEq(isCreateble bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_createble = ?", isCreateble))
}

// IsCreatebleIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsCreatebleIn(isCreateble bool, isCreatebleRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isCreateble}
	for _, arg := range isCreatebleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_createble IN (?)", iArgs))
}

// IsCreatebleNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsCreatebleNe(isCreateble bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_createble != ?", isCreateble))
}

// IsCreatebleNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsCreatebleNotIn(isCreateble bool, isCreatebleRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isCreateble}
	for _, arg := range isCreatebleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_createble NOT IN (?)", iArgs))
}

// IsDeletebleEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsDeletebleEq(isDeleteble bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_deleteble = ?", isDeleteble))
}

// IsDeletebleIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsDeletebleIn(isDeleteble bool, isDeletebleRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isDeleteble}
	for _, arg := range isDeletebleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_deleteble IN (?)", iArgs))
}

// IsDeletebleNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsDeletebleNe(isDeleteble bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_deleteble != ?", isDeleteble))
}

// IsDeletebleNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsDeletebleNotIn(isDeleteble bool, isDeletebleRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isDeleteble}
	for _, arg := range isDeletebleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_deleteble NOT IN (?)", iArgs))
}

// IsEnableEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsEnableEq(isEnable bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_enable = ?", isEnable))
}

// IsEnableIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsEnableIn(isEnable bool, isEnableRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isEnable}
	for _, arg := range isEnableRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_enable IN (?)", iArgs))
}

// IsEnableNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsEnableNe(isEnable bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_enable != ?", isEnable))
}

// IsEnableNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsEnableNotIn(isEnable bool, isEnableRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isEnable}
	for _, arg := range isEnableRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_enable NOT IN (?)", iArgs))
}

// IsGetAllableEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsGetAllableEq(isGetAllable bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_get_allable = ?", isGetAllable))
}

// IsGetAllableIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsGetAllableIn(isGetAllable bool, isGetAllableRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isGetAllable}
	for _, arg := range isGetAllableRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_get_allable IN (?)", iArgs))
}

// IsGetAllableNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsGetAllableNe(isGetAllable bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_get_allable != ?", isGetAllable))
}

// IsGetAllableNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsGetAllableNotIn(isGetAllable bool, isGetAllableRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isGetAllable}
	for _, arg := range isGetAllableRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_get_allable NOT IN (?)", iArgs))
}

// IsGetOneableEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsGetOneableEq(isGetOneable bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_get_oneable = ?", isGetOneable))
}

// IsGetOneableIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsGetOneableIn(isGetOneable bool, isGetOneableRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isGetOneable}
	for _, arg := range isGetOneableRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_get_oneable IN (?)", iArgs))
}

// IsGetOneableNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsGetOneableNe(isGetOneable bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_get_oneable != ?", isGetOneable))
}

// IsGetOneableNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsGetOneableNotIn(isGetOneable bool, isGetOneableRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isGetOneable}
	for _, arg := range isGetOneableRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_get_oneable NOT IN (?)", iArgs))
}

// IsManualEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsManualEq(isManual bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_manual = ?", isManual))
}

// IsManualIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsManualIn(isManual bool, isManualRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isManual}
	for _, arg := range isManualRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_manual IN (?)", iArgs))
}

// IsManualNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsManualNe(isManual bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_manual != ?", isManual))
}

// IsManualNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsManualNotIn(isManual bool, isManualRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isManual}
	for _, arg := range isManualRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_manual NOT IN (?)", iArgs))
}

// IsSystemEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsSystemEq(isSystem bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_system = ?", isSystem))
}

// IsSystemIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsSystemIn(isSystem bool, isSystemRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isSystem}
	for _, arg := range isSystemRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_system IN (?)", iArgs))
}

// IsSystemNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsSystemNe(isSystem bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_system != ?", isSystem))
}

// IsSystemNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsSystemNotIn(isSystem bool, isSystemRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isSystem}
	for _, arg := range isSystemRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_system NOT IN (?)", iArgs))
}

// IsUpdatebleEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsUpdatebleEq(isUpdateble bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_updateble = ?", isUpdateble))
}

// IsUpdatebleIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsUpdatebleIn(isUpdateble bool, isUpdatebleRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isUpdateble}
	for _, arg := range isUpdatebleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_updateble IN (?)", iArgs))
}

// IsUpdatebleNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsUpdatebleNe(isUpdateble bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("is_updateble != ?", isUpdateble))
}

// IsUpdatebleNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) IsUpdatebleNotIn(isUpdateble bool, isUpdatebleRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{isUpdateble}
	for _, arg := range isUpdatebleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("is_updateble NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) Limit(limit int) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) NameEq(name string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) NameIn(name string, nameRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) NameNe(name string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) NameNotIn(name string, nameRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// NullableEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) NullableEq(nullable bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("nullable = ?", nullable))
}

// NullableIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) NullableIn(nullable bool, nullableRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{nullable}
	for _, arg := range nullableRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("nullable IN (?)", iArgs))
}

// NullableNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) NullableNe(nullable bool) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("nullable != ?", nullable))
}

// NullableNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) NullableNotIn(nullable bool, nullableRest ...bool) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{nullable}
	for _, arg := range nullableRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("nullable NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs CircleUnitPropertyQuerySet) One(ret *CircleUnitProperty) error {
	return qs.db.First(ret).Error
}

// OrderAscByCircleUnitID is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderAscByCircleUnitID() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("circle_unit_id ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderAscByCreatedAt() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByCreatorID is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderAscByCreatorID() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("creator_id ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderAscByID() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderAscByUpdatedAt() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCircleUnitID is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderDescByCircleUnitID() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("circle_unit_id DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderDescByCreatedAt() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByCreatorID is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderDescByCreatorID() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("creator_id DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderDescByID() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) OrderDescByUpdatedAt() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PreloadCircleUnit is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) PreloadCircleUnit() CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Preload("CircleUnit"))
}

// SetCircleUnit is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCircleUnit(circleUnit CircleUnit) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CircleUnit)] = circleUnit
	return u
}

// SetCircleUnitID is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCircleUnitID(circleUnitID uint) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CircleUnitID)] = circleUnitID
	return u
}

// SetCreatebleUserExcludeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCreatebleUserExcludeIDs(createbleUserExcludeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CreatebleUserExcludeIDs)] = createbleUserExcludeIDs
	return u
}

// SetCreatebleUserExcludeStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCreatebleUserExcludeStatusIDs(createbleUserExcludeStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CreatebleUserExcludeStatusIDs)] = createbleUserExcludeStatusIDs
	return u
}

// SetCreatebleUserExcludeTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCreatebleUserExcludeTypeIDs(createbleUserExcludeTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CreatebleUserExcludeTypeIDs)] = createbleUserExcludeTypeIDs
	return u
}

// SetCreatebleUserIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCreatebleUserIDs(createbleUserIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CreatebleUserIDs)] = createbleUserIDs
	return u
}

// SetCreatebleUserStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCreatebleUserStatusIDs(createbleUserStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CreatebleUserStatusIDs)] = createbleUserStatusIDs
	return u
}

// SetCreatebleUserTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCreatebleUserTypeIDs(createbleUserTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CreatebleUserTypeIDs)] = createbleUserTypeIDs
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCreatedAt(createdAt time.Time) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCreatorID is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetCreatorID(creatorID uint) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.CreatorID)] = creatorID
	return u
}

// SetDeletableUserExcludeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetDeletableUserExcludeIDs(deletableUserExcludeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.DeletableUserExcludeIDs)] = deletableUserExcludeIDs
	return u
}

// SetDeletableUserExcludeStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetDeletableUserExcludeStatusIDs(deletableUserExcludeStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.DeletableUserExcludeStatusIDs)] = deletableUserExcludeStatusIDs
	return u
}

// SetDeletableUserExcludeTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetDeletableUserExcludeTypeIDs(deletableUserExcludeTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.DeletableUserExcludeTypeIDs)] = deletableUserExcludeTypeIDs
	return u
}

// SetDeletableUserIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetDeletableUserIDs(deletableUserIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.DeletableUserIDs)] = deletableUserIDs
	return u
}

// SetDeletableUserStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetDeletableUserStatusIDs(deletableUserStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.DeletableUserStatusIDs)] = deletableUserStatusIDs
	return u
}

// SetDeletableUserTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetDeletableUserTypeIDs(deletableUserTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.DeletableUserTypeIDs)] = deletableUserTypeIDs
	return u
}

// SetDescription is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetDescription(description string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.Description)] = description
	return u
}

// SetGetAllableUserExcludeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetAllableUserExcludeIDs(getAllableUserExcludeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetAllableUserExcludeIDs)] = getAllableUserExcludeIDs
	return u
}

// SetGetAllableUserExcludeStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetAllableUserExcludeStatusIDs(getAllableUserExcludeStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetAllableUserExcludeStatusIDs)] = getAllableUserExcludeStatusIDs
	return u
}

// SetGetAllableUserExcludeTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetAllableUserExcludeTypeIDs(getAllableUserExcludeTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetAllableUserExcludeTypeIDs)] = getAllableUserExcludeTypeIDs
	return u
}

// SetGetAllableUserIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetAllableUserIDs(getAllableUserIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetAllableUserIDs)] = getAllableUserIDs
	return u
}

// SetGetAllableUserStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetAllableUserStatusIDs(getAllableUserStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetAllableUserStatusIDs)] = getAllableUserStatusIDs
	return u
}

// SetGetAllableUserTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetAllableUserTypeIDs(getAllableUserTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetAllableUserTypeIDs)] = getAllableUserTypeIDs
	return u
}

// SetGetOneableUserExcludeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetOneableUserExcludeIDs(getOneableUserExcludeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetOneableUserExcludeIDs)] = getOneableUserExcludeIDs
	return u
}

// SetGetOneableUserExcludeStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetOneableUserExcludeStatusIDs(getOneableUserExcludeStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetOneableUserExcludeStatusIDs)] = getOneableUserExcludeStatusIDs
	return u
}

// SetGetOneableUserExcludeTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetOneableUserExcludeTypeIDs(getOneableUserExcludeTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetOneableUserExcludeTypeIDs)] = getOneableUserExcludeTypeIDs
	return u
}

// SetGetOneableUserIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetOneableUserIDs(getOneableUserIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetOneableUserIDs)] = getOneableUserIDs
	return u
}

// SetGetOneableUserStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetOneableUserStatusIDs(getOneableUserStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetOneableUserStatusIDs)] = getOneableUserStatusIDs
	return u
}

// SetGetOneableUserTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetGetOneableUserTypeIDs(getOneableUserTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.GetOneableUserTypeIDs)] = getOneableUserTypeIDs
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetID(ID uint) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.ID)] = ID
	return u
}

// SetIsCreateble is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetIsCreateble(isCreateble bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.IsCreateble)] = isCreateble
	return u
}

// SetIsDeleteble is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetIsDeleteble(isDeleteble bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.IsDeleteble)] = isDeleteble
	return u
}

// SetIsEnable is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetIsEnable(isEnable bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.IsEnable)] = isEnable
	return u
}

// SetIsGetAllable is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetIsGetAllable(isGetAllable bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.IsGetAllable)] = isGetAllable
	return u
}

// SetIsGetOneable is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetIsGetOneable(isGetOneable bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.IsGetOneable)] = isGetOneable
	return u
}

// SetIsManual is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetIsManual(isManual bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.IsManual)] = isManual
	return u
}

// SetIsSystem is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetIsSystem(isSystem bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.IsSystem)] = isSystem
	return u
}

// SetIsUpdateble is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetIsUpdateble(isUpdateble bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.IsUpdateble)] = isUpdateble
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetName(name string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.Name)] = name
	return u
}

// SetNullable is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetNullable(nullable bool) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.Nullable)] = nullable
	return u
}

// SetType is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetType(typeValue string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.Type)] = typeValue
	return u
}

// SetUpdatableUserExcludeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetUpdatableUserExcludeIDs(updatableUserExcludeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.UpdatableUserExcludeIDs)] = updatableUserExcludeIDs
	return u
}

// SetUpdatableUserExcludeStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetUpdatableUserExcludeStatusIDs(updatableUserExcludeStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.UpdatableUserExcludeStatusIDs)] = updatableUserExcludeStatusIDs
	return u
}

// SetUpdatableUserExcludeTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetUpdatableUserExcludeTypeIDs(updatableUserExcludeTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.UpdatableUserExcludeTypeIDs)] = updatableUserExcludeTypeIDs
	return u
}

// SetUpdatableUserIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetUpdatableUserIDs(updatableUserIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.UpdatableUserIDs)] = updatableUserIDs
	return u
}

// SetUpdatableUserStatusIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetUpdatableUserStatusIDs(updatableUserStatusIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.UpdatableUserStatusIDs)] = updatableUserStatusIDs
	return u
}

// SetUpdatableUserTypeIDs is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetUpdatableUserTypeIDs(updatableUserTypeIDs string) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.UpdatableUserTypeIDs)] = updatableUserTypeIDs
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) SetUpdatedAt(updatedAt time.Time) CircleUnitPropertyUpdater {
	u.fields[string(CircleUnitPropertyDBSchema.UpdatedAt)] = updatedAt
	return u
}

// TypeEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) TypeEq(typeValue string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("type = ?", typeValue))
}

// TypeIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) TypeIn(typeValue string, typeValueRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{typeValue}
	for _, arg := range typeValueRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("type IN (?)", iArgs))
}

// TypeNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) TypeNe(typeValue string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("type != ?", typeValue))
}

// TypeNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) TypeNotIn(typeValue string, typeValueRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{typeValue}
	for _, arg := range typeValueRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("type NOT IN (?)", iArgs))
}

// UpdatableUserExcludeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeIDsEq(updatableUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_exclude_ids = ?", updatableUserExcludeIDs))
}

// UpdatableUserExcludeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeIDsIn(updatableUserExcludeIDs string, updatableUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserExcludeIDs}
	for _, arg := range updatableUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_exclude_ids IN (?)", iArgs))
}

// UpdatableUserExcludeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeIDsNe(updatableUserExcludeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_exclude_ids != ?", updatableUserExcludeIDs))
}

// UpdatableUserExcludeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeIDsNotIn(updatableUserExcludeIDs string, updatableUserExcludeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserExcludeIDs}
	for _, arg := range updatableUserExcludeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_exclude_ids NOT IN (?)", iArgs))
}

// UpdatableUserExcludeStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeStatusIDsEq(updatableUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_exclude_status_ids = ?", updatableUserExcludeStatusIDs))
}

// UpdatableUserExcludeStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeStatusIDsIn(updatableUserExcludeStatusIDs string, updatableUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserExcludeStatusIDs}
	for _, arg := range updatableUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_exclude_status_ids IN (?)", iArgs))
}

// UpdatableUserExcludeStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeStatusIDsNe(updatableUserExcludeStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_exclude_status_ids != ?", updatableUserExcludeStatusIDs))
}

// UpdatableUserExcludeStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeStatusIDsNotIn(updatableUserExcludeStatusIDs string, updatableUserExcludeStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserExcludeStatusIDs}
	for _, arg := range updatableUserExcludeStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_exclude_status_ids NOT IN (?)", iArgs))
}

// UpdatableUserExcludeTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeTypeIDsEq(updatableUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_exclude_type_ids = ?", updatableUserExcludeTypeIDs))
}

// UpdatableUserExcludeTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeTypeIDsIn(updatableUserExcludeTypeIDs string, updatableUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserExcludeTypeIDs}
	for _, arg := range updatableUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_exclude_type_ids IN (?)", iArgs))
}

// UpdatableUserExcludeTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeTypeIDsNe(updatableUserExcludeTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_exclude_type_ids != ?", updatableUserExcludeTypeIDs))
}

// UpdatableUserExcludeTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserExcludeTypeIDsNotIn(updatableUserExcludeTypeIDs string, updatableUserExcludeTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserExcludeTypeIDs}
	for _, arg := range updatableUserExcludeTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_exclude_type_ids NOT IN (?)", iArgs))
}

// UpdatableUserIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserIDsEq(updatableUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_ids = ?", updatableUserIDs))
}

// UpdatableUserIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserIDsIn(updatableUserIDs string, updatableUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserIDs}
	for _, arg := range updatableUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_ids IN (?)", iArgs))
}

// UpdatableUserIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserIDsNe(updatableUserIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_ids != ?", updatableUserIDs))
}

// UpdatableUserIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserIDsNotIn(updatableUserIDs string, updatableUserIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserIDs}
	for _, arg := range updatableUserIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_ids NOT IN (?)", iArgs))
}

// UpdatableUserStatusIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserStatusIDsEq(updatableUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_status_ids = ?", updatableUserStatusIDs))
}

// UpdatableUserStatusIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserStatusIDsIn(updatableUserStatusIDs string, updatableUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserStatusIDs}
	for _, arg := range updatableUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_status_ids IN (?)", iArgs))
}

// UpdatableUserStatusIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserStatusIDsNe(updatableUserStatusIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_status_ids != ?", updatableUserStatusIDs))
}

// UpdatableUserStatusIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserStatusIDsNotIn(updatableUserStatusIDs string, updatableUserStatusIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserStatusIDs}
	for _, arg := range updatableUserStatusIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_status_ids NOT IN (?)", iArgs))
}

// UpdatableUserTypeIDsEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserTypeIDsEq(updatableUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_type_ids = ?", updatableUserTypeIDs))
}

// UpdatableUserTypeIDsIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserTypeIDsIn(updatableUserTypeIDs string, updatableUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserTypeIDs}
	for _, arg := range updatableUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_type_ids IN (?)", iArgs))
}

// UpdatableUserTypeIDsNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserTypeIDsNe(updatableUserTypeIDs string) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updatable_user_type_ids != ?", updatableUserTypeIDs))
}

// UpdatableUserTypeIDsNotIn is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatableUserTypeIDsNotIn(updatableUserTypeIDs string, updatableUserTypeIDsRest ...string) CircleUnitPropertyQuerySet {
	iArgs := []interface{}{updatableUserTypeIDs}
	for _, arg := range updatableUserTypeIDsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updatable_user_type_ids NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u CircleUnitPropertyUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatedAtEq(updatedAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatedAtGt(updatedAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatedAtGte(updatedAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatedAtLt(updatedAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatedAtLte(updatedAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs CircleUnitPropertyQuerySet) UpdatedAtNe(updatedAt time.Time) CircleUnitPropertyQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set CircleUnitPropertyQuerySet

// ===== BEGIN of CircleUnitProperty modifiers

type circleUnitPropertyDBSchemaField string

func (f circleUnitPropertyDBSchemaField) String() string {
	return string(f)
}

// CircleUnitPropertyDBSchema stores db field names of CircleUnitProperty
var CircleUnitPropertyDBSchema = struct {
	ID                             circleUnitPropertyDBSchemaField
	CreatedAt                      circleUnitPropertyDBSchemaField
	UpdatedAt                      circleUnitPropertyDBSchemaField
	Name                           circleUnitPropertyDBSchemaField
	Description                    circleUnitPropertyDBSchemaField
	CreatorID                      circleUnitPropertyDBSchemaField
	CircleUnit                     circleUnitPropertyDBSchemaField
	CircleUnitID                   circleUnitPropertyDBSchemaField
	Type                           circleUnitPropertyDBSchemaField
	Nullable                       circleUnitPropertyDBSchemaField
	IsEnable                       circleUnitPropertyDBSchemaField
	IsManual                       circleUnitPropertyDBSchemaField
	IsSystem                       circleUnitPropertyDBSchemaField
	IsCreateble                    circleUnitPropertyDBSchemaField
	CreatebleUserIDs               circleUnitPropertyDBSchemaField
	CreatebleUserTypeIDs           circleUnitPropertyDBSchemaField
	CreatebleUserStatusIDs         circleUnitPropertyDBSchemaField
	CreatebleUserExcludeIDs        circleUnitPropertyDBSchemaField
	CreatebleUserExcludeTypeIDs    circleUnitPropertyDBSchemaField
	CreatebleUserExcludeStatusIDs  circleUnitPropertyDBSchemaField
	IsGetAllable                   circleUnitPropertyDBSchemaField
	GetAllableUserIDs              circleUnitPropertyDBSchemaField
	GetAllableUserTypeIDs          circleUnitPropertyDBSchemaField
	GetAllableUserStatusIDs        circleUnitPropertyDBSchemaField
	GetAllableUserExcludeIDs       circleUnitPropertyDBSchemaField
	GetAllableUserExcludeTypeIDs   circleUnitPropertyDBSchemaField
	GetAllableUserExcludeStatusIDs circleUnitPropertyDBSchemaField
	IsGetOneable                   circleUnitPropertyDBSchemaField
	GetOneableUserIDs              circleUnitPropertyDBSchemaField
	GetOneableUserTypeIDs          circleUnitPropertyDBSchemaField
	GetOneableUserStatusIDs        circleUnitPropertyDBSchemaField
	GetOneableUserExcludeIDs       circleUnitPropertyDBSchemaField
	GetOneableUserExcludeTypeIDs   circleUnitPropertyDBSchemaField
	GetOneableUserExcludeStatusIDs circleUnitPropertyDBSchemaField
	IsDeleteble                    circleUnitPropertyDBSchemaField
	DeletableUserIDs               circleUnitPropertyDBSchemaField
	DeletableUserTypeIDs           circleUnitPropertyDBSchemaField
	DeletableUserStatusIDs         circleUnitPropertyDBSchemaField
	DeletableUserExcludeIDs        circleUnitPropertyDBSchemaField
	DeletableUserExcludeTypeIDs    circleUnitPropertyDBSchemaField
	DeletableUserExcludeStatusIDs  circleUnitPropertyDBSchemaField
	IsUpdateble                    circleUnitPropertyDBSchemaField
	UpdatableUserIDs               circleUnitPropertyDBSchemaField
	UpdatableUserTypeIDs           circleUnitPropertyDBSchemaField
	UpdatableUserStatusIDs         circleUnitPropertyDBSchemaField
	UpdatableUserExcludeIDs        circleUnitPropertyDBSchemaField
	UpdatableUserExcludeTypeIDs    circleUnitPropertyDBSchemaField
	UpdatableUserExcludeStatusIDs  circleUnitPropertyDBSchemaField
}{

	ID:                             circleUnitPropertyDBSchemaField("id"),
	CreatedAt:                      circleUnitPropertyDBSchemaField("created_at"),
	UpdatedAt:                      circleUnitPropertyDBSchemaField("updated_at"),
	Name:                           circleUnitPropertyDBSchemaField("name"),
	Description:                    circleUnitPropertyDBSchemaField("description"),
	CreatorID:                      circleUnitPropertyDBSchemaField("creator_id"),
	CircleUnit:                     circleUnitPropertyDBSchemaField("circle_unit"),
	CircleUnitID:                   circleUnitPropertyDBSchemaField("circle_unit_id"),
	Type:                           circleUnitPropertyDBSchemaField("type"),
	Nullable:                       circleUnitPropertyDBSchemaField("nullable"),
	IsEnable:                       circleUnitPropertyDBSchemaField("is_enable"),
	IsManual:                       circleUnitPropertyDBSchemaField("is_manual"),
	IsSystem:                       circleUnitPropertyDBSchemaField("is_system"),
	IsCreateble:                    circleUnitPropertyDBSchemaField("is_createble"),
	CreatebleUserIDs:               circleUnitPropertyDBSchemaField("createble_user_ids"),
	CreatebleUserTypeIDs:           circleUnitPropertyDBSchemaField("createble_user_type_ids"),
	CreatebleUserStatusIDs:         circleUnitPropertyDBSchemaField("createble_user_status_ids"),
	CreatebleUserExcludeIDs:        circleUnitPropertyDBSchemaField("createble_user_exclude_ids"),
	CreatebleUserExcludeTypeIDs:    circleUnitPropertyDBSchemaField("createble_user_exclude_type_ids"),
	CreatebleUserExcludeStatusIDs:  circleUnitPropertyDBSchemaField("createble_user_exclude_status_ids"),
	IsGetAllable:                   circleUnitPropertyDBSchemaField("is_get_allable"),
	GetAllableUserIDs:              circleUnitPropertyDBSchemaField("get_allable_user_ids"),
	GetAllableUserTypeIDs:          circleUnitPropertyDBSchemaField("get_allable_user_type_ids"),
	GetAllableUserStatusIDs:        circleUnitPropertyDBSchemaField("get_allable_user_status_ids"),
	GetAllableUserExcludeIDs:       circleUnitPropertyDBSchemaField("get_allable_user_exclude_ids"),
	GetAllableUserExcludeTypeIDs:   circleUnitPropertyDBSchemaField("get_allable_user_exclude_type_ids"),
	GetAllableUserExcludeStatusIDs: circleUnitPropertyDBSchemaField("get_allable_user_exclude_status_ids"),
	IsGetOneable:                   circleUnitPropertyDBSchemaField("is_get_oneable"),
	GetOneableUserIDs:              circleUnitPropertyDBSchemaField("get_oneable_user_ids"),
	GetOneableUserTypeIDs:          circleUnitPropertyDBSchemaField("get_oneable_user_type_ids"),
	GetOneableUserStatusIDs:        circleUnitPropertyDBSchemaField("get_oneable_user_status_ids"),
	GetOneableUserExcludeIDs:       circleUnitPropertyDBSchemaField("get_oneable_user_exclude_ids"),
	GetOneableUserExcludeTypeIDs:   circleUnitPropertyDBSchemaField("get_oneable_user_exclude_type_ids"),
	GetOneableUserExcludeStatusIDs: circleUnitPropertyDBSchemaField("get_oneable_user_exclude_status_ids"),
	IsDeleteble:                    circleUnitPropertyDBSchemaField("is_deleteble"),
	DeletableUserIDs:               circleUnitPropertyDBSchemaField("deletable_user_ids"),
	DeletableUserTypeIDs:           circleUnitPropertyDBSchemaField("deletable_user_type_ids"),
	DeletableUserStatusIDs:         circleUnitPropertyDBSchemaField("deletable_user_status_ids"),
	DeletableUserExcludeIDs:        circleUnitPropertyDBSchemaField("deletable_user_exclude_ids"),
	DeletableUserExcludeTypeIDs:    circleUnitPropertyDBSchemaField("deletable_user_exclude_type_ids"),
	DeletableUserExcludeStatusIDs:  circleUnitPropertyDBSchemaField("deletable_user_exclude_status_ids"),
	IsUpdateble:                    circleUnitPropertyDBSchemaField("is_updateble"),
	UpdatableUserIDs:               circleUnitPropertyDBSchemaField("updatable_user_ids"),
	UpdatableUserTypeIDs:           circleUnitPropertyDBSchemaField("updatable_user_type_ids"),
	UpdatableUserStatusIDs:         circleUnitPropertyDBSchemaField("updatable_user_status_ids"),
	UpdatableUserExcludeIDs:        circleUnitPropertyDBSchemaField("updatable_user_exclude_ids"),
	UpdatableUserExcludeTypeIDs:    circleUnitPropertyDBSchemaField("updatable_user_exclude_type_ids"),
	UpdatableUserExcludeStatusIDs:  circleUnitPropertyDBSchemaField("updatable_user_exclude_status_ids"),
}

// Update updates CircleUnitProperty fields by primary key
func (o *CircleUnitProperty) Update(db *gorm.DB, fields ...circleUnitPropertyDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":                                  o.ID,
		"created_at":                          o.CreatedAt,
		"updated_at":                          o.UpdatedAt,
		"name":                                o.Name,
		"description":                         o.Description,
		"creator_id":                          o.CreatorID,
		"circle_unit":                         o.CircleUnit,
		"circle_unit_id":                      o.CircleUnitID,
		"type":                                o.Type,
		"nullable":                            o.Nullable,
		"is_enable":                           o.IsEnable,
		"is_manual":                           o.IsManual,
		"is_system":                           o.IsSystem,
		"is_createble":                        o.IsCreateble,
		"createble_user_ids":                  o.CreatebleUserIDs,
		"createble_user_type_ids":             o.CreatebleUserTypeIDs,
		"createble_user_status_ids":           o.CreatebleUserStatusIDs,
		"createble_user_exclude_ids":          o.CreatebleUserExcludeIDs,
		"createble_user_exclude_type_ids":     o.CreatebleUserExcludeTypeIDs,
		"createble_user_exclude_status_ids":   o.CreatebleUserExcludeStatusIDs,
		"is_get_allable":                      o.IsGetAllable,
		"get_allable_user_ids":                o.GetAllableUserIDs,
		"get_allable_user_type_ids":           o.GetAllableUserTypeIDs,
		"get_allable_user_status_ids":         o.GetAllableUserStatusIDs,
		"get_allable_user_exclude_ids":        o.GetAllableUserExcludeIDs,
		"get_allable_user_exclude_type_ids":   o.GetAllableUserExcludeTypeIDs,
		"get_allable_user_exclude_status_ids": o.GetAllableUserExcludeStatusIDs,
		"is_get_oneable":                      o.IsGetOneable,
		"get_oneable_user_ids":                o.GetOneableUserIDs,
		"get_oneable_user_type_ids":           o.GetOneableUserTypeIDs,
		"get_oneable_user_status_ids":         o.GetOneableUserStatusIDs,
		"get_oneable_user_exclude_ids":        o.GetOneableUserExcludeIDs,
		"get_oneable_user_exclude_type_ids":   o.GetOneableUserExcludeTypeIDs,
		"get_oneable_user_exclude_status_ids": o.GetOneableUserExcludeStatusIDs,
		"is_deleteble":                        o.IsDeleteble,
		"deletable_user_ids":                  o.DeletableUserIDs,
		"deletable_user_type_ids":             o.DeletableUserTypeIDs,
		"deletable_user_status_ids":           o.DeletableUserStatusIDs,
		"deletable_user_exclude_ids":          o.DeletableUserExcludeIDs,
		"deletable_user_exclude_type_ids":     o.DeletableUserExcludeTypeIDs,
		"deletable_user_exclude_status_ids":   o.DeletableUserExcludeStatusIDs,
		"is_updateble":                        o.IsUpdateble,
		"updatable_user_ids":                  o.UpdatableUserIDs,
		"updatable_user_type_ids":             o.UpdatableUserTypeIDs,
		"updatable_user_status_ids":           o.UpdatableUserStatusIDs,
		"updatable_user_exclude_ids":          o.UpdatableUserExcludeIDs,
		"updatable_user_exclude_type_ids":     o.UpdatableUserExcludeTypeIDs,
		"updatable_user_exclude_status_ids":   o.UpdatableUserExcludeStatusIDs,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update CircleUnitProperty %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// CircleUnitPropertyUpdater is an CircleUnitProperty updates manager
type CircleUnitPropertyUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewCircleUnitPropertyUpdater creates new CircleUnitProperty updater
func NewCircleUnitPropertyUpdater(db *gorm.DB) CircleUnitPropertyUpdater {
	return CircleUnitPropertyUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&CircleUnitProperty{}),
	}
}

// ===== END of CircleUnitProperty modifiers

// ===== END of all query sets
