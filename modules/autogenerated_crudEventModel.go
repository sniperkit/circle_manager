package modules

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set CrudEventQuerySet

// CrudEventQuerySet is an queryset type for CrudEvent
type CrudEventQuerySet struct {
	db *gorm.DB
}

// NewCrudEventQuerySet constructs new CrudEventQuerySet
func NewCrudEventQuerySet(db *gorm.DB) CrudEventQuerySet {
	return CrudEventQuerySet{
		db: db.Model(&CrudEvent{}),
	}
}

func (qs CrudEventQuerySet) w(db *gorm.DB) CrudEventQuerySet {
	return NewCrudEventQuerySet(db)
}

// ActionEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) ActionEq(action string) CrudEventQuerySet {
	return qs.w(qs.db.Where("action = ?", action))
}

// ActionIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) ActionIn(action string, actionRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{action}
	for _, arg := range actionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("action IN (?)", iArgs))
}

// ActionNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) ActionNe(action string) CrudEventQuerySet {
	return qs.w(qs.db.Where("action != ?", action))
}

// ActionNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) ActionNotIn(action string, actionRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{action}
	for _, arg := range actionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("action NOT IN (?)", iArgs))
}

// All is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) All(ret *[]CrudEvent) error {
	return qs.db.Find(ret).Error
}

// CheckedNotificationEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CheckedNotificationEq(checkedNotification bool) CrudEventQuerySet {
	return qs.w(qs.db.Where("checked_notification = ?", checkedNotification))
}

// CheckedNotificationIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CheckedNotificationIn(checkedNotification bool, checkedNotificationRest ...bool) CrudEventQuerySet {
	iArgs := []interface{}{checkedNotification}
	for _, arg := range checkedNotificationRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("checked_notification IN (?)", iArgs))
}

// CheckedNotificationNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CheckedNotificationNe(checkedNotification bool) CrudEventQuerySet {
	return qs.w(qs.db.Where("checked_notification != ?", checkedNotification))
}

// CheckedNotificationNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CheckedNotificationNotIn(checkedNotification bool, checkedNotificationRest ...bool) CrudEventQuerySet {
	iArgs := []interface{}{checkedNotification}
	for _, arg := range checkedNotificationRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("checked_notification NOT IN (?)", iArgs))
}

// Count is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *CrudEvent) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatedAtEq(createdAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatedAtGt(createdAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatedAtGte(createdAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatedAtLt(createdAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatedAtLte(createdAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatedAtNe(createdAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// CreatorIDEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatorIDEq(creatorID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("creator_id = ?", creatorID))
}

// CreatorIDGt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatorIDGt(creatorID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("creator_id > ?", creatorID))
}

// CreatorIDGte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatorIDGte(creatorID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("creator_id >= ?", creatorID))
}

// CreatorIDIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatorIDIn(creatorID uint, creatorIDRest ...uint) CrudEventQuerySet {
	iArgs := []interface{}{creatorID}
	for _, arg := range creatorIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("creator_id IN (?)", iArgs))
}

// CreatorIDLt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatorIDLt(creatorID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("creator_id < ?", creatorID))
}

// CreatorIDLte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatorIDLte(creatorID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("creator_id <= ?", creatorID))
}

// CreatorIDNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatorIDNe(creatorID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("creator_id != ?", creatorID))
}

// CreatorIDNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) CreatorIDNotIn(creatorID uint, creatorIDRest ...uint) CrudEventQuerySet {
	iArgs := []interface{}{creatorID}
	for _, arg := range creatorIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("creator_id NOT IN (?)", iArgs))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *CrudEvent) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) Delete() error {
	return qs.db.Delete(CrudEvent{}).Error
}

// DescriptionEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) DescriptionEq(description string) CrudEventQuerySet {
	return qs.w(qs.db.Where("description = ?", description))
}

// DescriptionIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) DescriptionIn(description string, descriptionRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{description}
	for _, arg := range descriptionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("description IN (?)", iArgs))
}

// DescriptionNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) DescriptionNe(description string) CrudEventQuerySet {
	return qs.w(qs.db.Where("description != ?", description))
}

// DescriptionNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) DescriptionNotIn(description string, descriptionRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{description}
	for _, arg := range descriptionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("description NOT IN (?)", iArgs))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) GetUpdater() CrudEventUpdater {
	return NewCrudEventUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) IDEq(ID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) IDGt(ID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) IDGte(ID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) IDIn(ID uint, IDRest ...uint) CrudEventQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) IDLt(ID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) IDLte(ID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) IDNe(ID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) IDNotIn(ID uint, IDRest ...uint) CrudEventQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) Limit(limit int) CrudEventQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) NameEq(name string) CrudEventQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) NameIn(name string, nameRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) NameNe(name string) CrudEventQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) NameNotIn(name string, nameRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// OldDataEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OldDataEq(oldData string) CrudEventQuerySet {
	return qs.w(qs.db.Where("old_data = ?", oldData))
}

// OldDataIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OldDataIn(oldData string, oldDataRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{oldData}
	for _, arg := range oldDataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("old_data IN (?)", iArgs))
}

// OldDataNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OldDataNe(oldData string) CrudEventQuerySet {
	return qs.w(qs.db.Where("old_data != ?", oldData))
}

// OldDataNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OldDataNotIn(oldData string, oldDataRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{oldData}
	for _, arg := range oldDataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("old_data NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs CrudEventQuerySet) One(ret *CrudEvent) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderAscByCreatedAt() CrudEventQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByCreatorID is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderAscByCreatorID() CrudEventQuerySet {
	return qs.w(qs.db.Order("creator_id ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderAscByID() CrudEventQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByTargetID is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderAscByTargetID() CrudEventQuerySet {
	return qs.w(qs.db.Order("target_id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderAscByUpdatedAt() CrudEventQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderDescByCreatedAt() CrudEventQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByCreatorID is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderDescByCreatorID() CrudEventQuerySet {
	return qs.w(qs.db.Order("creator_id DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderDescByID() CrudEventQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByTargetID is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderDescByTargetID() CrudEventQuerySet {
	return qs.w(qs.db.Order("target_id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) OrderDescByUpdatedAt() CrudEventQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// RequestDataEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) RequestDataEq(requestData string) CrudEventQuerySet {
	return qs.w(qs.db.Where("request_data = ?", requestData))
}

// RequestDataIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) RequestDataIn(requestData string, requestDataRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{requestData}
	for _, arg := range requestDataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("request_data IN (?)", iArgs))
}

// RequestDataNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) RequestDataNe(requestData string) CrudEventQuerySet {
	return qs.w(qs.db.Where("request_data != ?", requestData))
}

// RequestDataNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) RequestDataNotIn(requestData string, requestDataRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{requestData}
	for _, arg := range requestDataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("request_data NOT IN (?)", iArgs))
}

// ResponseDataEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) ResponseDataEq(responseData string) CrudEventQuerySet {
	return qs.w(qs.db.Where("response_data = ?", responseData))
}

// ResponseDataIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) ResponseDataIn(responseData string, responseDataRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{responseData}
	for _, arg := range responseDataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("response_data IN (?)", iArgs))
}

// ResponseDataNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) ResponseDataNe(responseData string) CrudEventQuerySet {
	return qs.w(qs.db.Where("response_data != ?", responseData))
}

// ResponseDataNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) ResponseDataNotIn(responseData string, responseDataRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{responseData}
	for _, arg := range responseDataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("response_data NOT IN (?)", iArgs))
}

// SetAction is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetAction(action string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.Action)] = action
	return u
}

// SetCheckedNotification is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetCheckedNotification(checkedNotification bool) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.CheckedNotification)] = checkedNotification
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetCreatedAt(createdAt time.Time) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCreatorID is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetCreatorID(creatorID uint) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.CreatorID)] = creatorID
	return u
}

// SetDescription is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetDescription(description string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.Description)] = description
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetID(ID uint) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetName(name string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.Name)] = name
	return u
}

// SetOldData is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetOldData(oldData string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.OldData)] = oldData
	return u
}

// SetRequestData is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetRequestData(requestData string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.RequestData)] = requestData
	return u
}

// SetResponseData is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetResponseData(responseData string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.ResponseData)] = responseData
	return u
}

// SetTargetID is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetTargetID(targetID uint) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.TargetID)] = targetID
	return u
}

// SetTargetObject is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetTargetObject(targetObject string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.TargetObject)] = targetObject
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetUpdatedAt(updatedAt time.Time) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUpdatedData is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetUpdatedData(updatedData string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.UpdatedData)] = updatedData
	return u
}

// SetWhere is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) SetWhere(where string) CrudEventUpdater {
	u.fields[string(CrudEventDBSchema.Where)] = where
	return u
}

// TargetIDEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetIDEq(targetID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("target_id = ?", targetID))
}

// TargetIDGt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetIDGt(targetID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("target_id > ?", targetID))
}

// TargetIDGte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetIDGte(targetID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("target_id >= ?", targetID))
}

// TargetIDIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetIDIn(targetID uint, targetIDRest ...uint) CrudEventQuerySet {
	iArgs := []interface{}{targetID}
	for _, arg := range targetIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("target_id IN (?)", iArgs))
}

// TargetIDLt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetIDLt(targetID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("target_id < ?", targetID))
}

// TargetIDLte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetIDLte(targetID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("target_id <= ?", targetID))
}

// TargetIDNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetIDNe(targetID uint) CrudEventQuerySet {
	return qs.w(qs.db.Where("target_id != ?", targetID))
}

// TargetIDNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetIDNotIn(targetID uint, targetIDRest ...uint) CrudEventQuerySet {
	iArgs := []interface{}{targetID}
	for _, arg := range targetIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("target_id NOT IN (?)", iArgs))
}

// TargetObjectEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetObjectEq(targetObject string) CrudEventQuerySet {
	return qs.w(qs.db.Where("target_object = ?", targetObject))
}

// TargetObjectIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetObjectIn(targetObject string, targetObjectRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{targetObject}
	for _, arg := range targetObjectRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("target_object IN (?)", iArgs))
}

// TargetObjectNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetObjectNe(targetObject string) CrudEventQuerySet {
	return qs.w(qs.db.Where("target_object != ?", targetObject))
}

// TargetObjectNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) TargetObjectNotIn(targetObject string, targetObjectRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{targetObject}
	for _, arg := range targetObjectRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("target_object NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u CrudEventUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedAtEq(updatedAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedAtGt(updatedAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedAtGte(updatedAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedAtLt(updatedAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedAtLte(updatedAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedAtNe(updatedAt time.Time) CrudEventQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// UpdatedDataEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedDataEq(updatedData string) CrudEventQuerySet {
	return qs.w(qs.db.Where("updated_data = ?", updatedData))
}

// UpdatedDataIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedDataIn(updatedData string, updatedDataRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{updatedData}
	for _, arg := range updatedDataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updated_data IN (?)", iArgs))
}

// UpdatedDataNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedDataNe(updatedData string) CrudEventQuerySet {
	return qs.w(qs.db.Where("updated_data != ?", updatedData))
}

// UpdatedDataNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) UpdatedDataNotIn(updatedData string, updatedDataRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{updatedData}
	for _, arg := range updatedDataRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("updated_data NOT IN (?)", iArgs))
}

// WhereEq is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) WhereEq(where string) CrudEventQuerySet {
	return qs.w(qs.db.Where("where = ?", where))
}

// WhereIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) WhereIn(where string, whereRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{where}
	for _, arg := range whereRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("where IN (?)", iArgs))
}

// WhereNe is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) WhereNe(where string) CrudEventQuerySet {
	return qs.w(qs.db.Where("where != ?", where))
}

// WhereNotIn is an autogenerated method
// nolint: dupl
func (qs CrudEventQuerySet) WhereNotIn(where string, whereRest ...string) CrudEventQuerySet {
	iArgs := []interface{}{where}
	for _, arg := range whereRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("where NOT IN (?)", iArgs))
}

// ===== END of query set CrudEventQuerySet

// ===== BEGIN of CrudEvent modifiers

type crudEventDBSchemaField string

func (f crudEventDBSchemaField) String() string {
	return string(f)
}

// CrudEventDBSchema stores db field names of CrudEvent
var CrudEventDBSchema = struct {
	ID                  crudEventDBSchemaField
	CreatedAt           crudEventDBSchemaField
	UpdatedAt           crudEventDBSchemaField
	Name                crudEventDBSchemaField
	Description         crudEventDBSchemaField
	CreatorID           crudEventDBSchemaField
	Action              crudEventDBSchemaField
	TargetObject        crudEventDBSchemaField
	TargetID            crudEventDBSchemaField
	Where               crudEventDBSchemaField
	UpdatedData         crudEventDBSchemaField
	OldData             crudEventDBSchemaField
	RequestData         crudEventDBSchemaField
	ResponseData        crudEventDBSchemaField
	CheckedNotification crudEventDBSchemaField
}{

	ID:                  crudEventDBSchemaField("id"),
	CreatedAt:           crudEventDBSchemaField("created_at"),
	UpdatedAt:           crudEventDBSchemaField("updated_at"),
	Name:                crudEventDBSchemaField("name"),
	Description:         crudEventDBSchemaField("description"),
	CreatorID:           crudEventDBSchemaField("creator_id"),
	Action:              crudEventDBSchemaField("action"),
	TargetObject:        crudEventDBSchemaField("target_object"),
	TargetID:            crudEventDBSchemaField("target_id"),
	Where:               crudEventDBSchemaField("where"),
	UpdatedData:         crudEventDBSchemaField("updated_data"),
	OldData:             crudEventDBSchemaField("old_data"),
	RequestData:         crudEventDBSchemaField("request_data"),
	ResponseData:        crudEventDBSchemaField("response_data"),
	CheckedNotification: crudEventDBSchemaField("checked_notification"),
}

// Update updates CrudEvent fields by primary key
func (o *CrudEvent) Update(db *gorm.DB, fields ...crudEventDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":                   o.ID,
		"created_at":           o.CreatedAt,
		"updated_at":           o.UpdatedAt,
		"name":                 o.Name,
		"description":          o.Description,
		"creator_id":           o.CreatorID,
		"action":               o.Action,
		"target_object":        o.TargetObject,
		"target_id":            o.TargetID,
		"where":                o.Where,
		"updated_data":         o.UpdatedData,
		"old_data":             o.OldData,
		"request_data":         o.RequestData,
		"response_data":        o.ResponseData,
		"checked_notification": o.CheckedNotification,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update CrudEvent %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// CrudEventUpdater is an CrudEvent updates manager
type CrudEventUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewCrudEventUpdater creates new CrudEvent updater
func NewCrudEventUpdater(db *gorm.DB) CrudEventUpdater {
	return CrudEventUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&CrudEvent{}),
	}
}

// ===== END of CrudEvent modifiers

// ===== END of all query sets
