package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set TodoQuerySet

// TodoQuerySet is an queryset type for Todo
type TodoQuerySet struct {
	db *gorm.DB
}

// NewTodoQuerySet constructs new TodoQuerySet
func NewTodoQuerySet(db *gorm.DB) TodoQuerySet {
	return TodoQuerySet{
		db: db.Model(&Todo{}),
	}
}

func (qs TodoQuerySet) w(db *gorm.DB) TodoQuerySet {
	return NewTodoQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) All(ret *[]Todo) error {
	return qs.db.Find(ret).Error
}

// BoardIDEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) BoardIDEq(boardID string) TodoQuerySet {
	return qs.w(qs.db.Where("board_id = ?", boardID))
}

// BoardIDIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) BoardIDIn(boardID string, boardIDRest ...string) TodoQuerySet {
	iArgs := []interface{}{boardID}
	for _, arg := range boardIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("board_id IN (?)", iArgs))
}

// BoardIDNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) BoardIDNe(boardID string) TodoQuerySet {
	return qs.w(qs.db.Where("board_id != ?", boardID))
}

// BoardIDNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) BoardIDNotIn(boardID string, boardIDRest ...string) TodoQuerySet {
	iArgs := []interface{}{boardID}
	for _, arg := range boardIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("board_id NOT IN (?)", iArgs))
}

// BoardNameEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) BoardNameEq(boardName string) TodoQuerySet {
	return qs.w(qs.db.Where("board_name = ?", boardName))
}

// BoardNameIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) BoardNameIn(boardName string, boardNameRest ...string) TodoQuerySet {
	iArgs := []interface{}{boardName}
	for _, arg := range boardNameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("board_name IN (?)", iArgs))
}

// BoardNameNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) BoardNameNe(boardName string) TodoQuerySet {
	return qs.w(qs.db.Where("board_name != ?", boardName))
}

// BoardNameNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) BoardNameNotIn(boardName string, boardNameRest ...string) TodoQuerySet {
	iArgs := []interface{}{boardName}
	for _, arg := range boardNameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("board_name NOT IN (?)", iArgs))
}

// CardIDEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CardIDEq(cardID string) TodoQuerySet {
	return qs.w(qs.db.Where("card_id = ?", cardID))
}

// CardIDIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CardIDIn(cardID string, cardIDRest ...string) TodoQuerySet {
	iArgs := []interface{}{cardID}
	for _, arg := range cardIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("card_id IN (?)", iArgs))
}

// CardIDNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CardIDNe(cardID string) TodoQuerySet {
	return qs.w(qs.db.Where("card_id != ?", cardID))
}

// CardIDNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CardIDNotIn(cardID string, cardIDRest ...string) TodoQuerySet {
	iArgs := []interface{}{cardID}
	for _, arg := range cardIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("card_id NOT IN (?)", iArgs))
}

// Count is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Todo) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CreatedAtEq(createdAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CreatedAtGt(createdAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CreatedAtGte(createdAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CreatedAtLt(createdAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CreatedAtLte(createdAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) CreatedAtNe(createdAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Todo) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) Delete() error {
	return qs.db.Delete(Todo{}).Error
}

// DescriptionEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) DescriptionEq(description string) TodoQuerySet {
	return qs.w(qs.db.Where("description = ?", description))
}

// DescriptionIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) DescriptionIn(description string, descriptionRest ...string) TodoQuerySet {
	iArgs := []interface{}{description}
	for _, arg := range descriptionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("description IN (?)", iArgs))
}

// DescriptionNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) DescriptionNe(description string) TodoQuerySet {
	return qs.w(qs.db.Where("description != ?", description))
}

// DescriptionNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) DescriptionNotIn(description string, descriptionRest ...string) TodoQuerySet {
	iArgs := []interface{}{description}
	for _, arg := range descriptionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("description NOT IN (?)", iArgs))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) GetUpdater() TodoUpdater {
	return NewTodoUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) IDEq(ID uint) TodoQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) IDGt(ID uint) TodoQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) IDGte(ID uint) TodoQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) IDIn(ID uint, IDRest ...uint) TodoQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) IDLt(ID uint) TodoQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) IDLte(ID uint) TodoQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) IDNe(ID uint) TodoQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) IDNotIn(ID uint, IDRest ...uint) TodoQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) Limit(limit int) TodoQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// ListIDEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) ListIDEq(listID string) TodoQuerySet {
	return qs.w(qs.db.Where("list_id = ?", listID))
}

// ListIDIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) ListIDIn(listID string, listIDRest ...string) TodoQuerySet {
	iArgs := []interface{}{listID}
	for _, arg := range listIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("list_id IN (?)", iArgs))
}

// ListIDNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) ListIDNe(listID string) TodoQuerySet {
	return qs.w(qs.db.Where("list_id != ?", listID))
}

// ListIDNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) ListIDNotIn(listID string, listIDRest ...string) TodoQuerySet {
	iArgs := []interface{}{listID}
	for _, arg := range listIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("list_id NOT IN (?)", iArgs))
}

// ListNameEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) ListNameEq(listName string) TodoQuerySet {
	return qs.w(qs.db.Where("list_name = ?", listName))
}

// ListNameIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) ListNameIn(listName string, listNameRest ...string) TodoQuerySet {
	iArgs := []interface{}{listName}
	for _, arg := range listNameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("list_name IN (?)", iArgs))
}

// ListNameNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) ListNameNe(listName string) TodoQuerySet {
	return qs.w(qs.db.Where("list_name != ?", listName))
}

// ListNameNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) ListNameNotIn(listName string, listNameRest ...string) TodoQuerySet {
	iArgs := []interface{}{listName}
	for _, arg := range listNameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("list_name NOT IN (?)", iArgs))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) NameEq(name string) TodoQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) NameIn(name string, nameRest ...string) TodoQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) NameNe(name string) TodoQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) NameNotIn(name string, nameRest ...string) TodoQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs TodoQuerySet) One(ret *Todo) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) OrderAscByCreatedAt() TodoQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) OrderAscByID() TodoQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) OrderAscByUpdatedAt() TodoQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) OrderDescByCreatedAt() TodoQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) OrderDescByID() TodoQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) OrderDescByUpdatedAt() TodoQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SetBoardID is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetBoardID(boardID string) TodoUpdater {
	u.fields[string(TodoDBSchema.BoardID)] = boardID
	return u
}

// SetBoardName is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetBoardName(boardName string) TodoUpdater {
	u.fields[string(TodoDBSchema.BoardName)] = boardName
	return u
}

// SetCardID is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetCardID(cardID string) TodoUpdater {
	u.fields[string(TodoDBSchema.CardID)] = cardID
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetCreatedAt(createdAt time.Time) TodoUpdater {
	u.fields[string(TodoDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDescription is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetDescription(description string) TodoUpdater {
	u.fields[string(TodoDBSchema.Description)] = description
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetID(ID uint) TodoUpdater {
	u.fields[string(TodoDBSchema.ID)] = ID
	return u
}

// SetListID is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetListID(listID string) TodoUpdater {
	u.fields[string(TodoDBSchema.ListID)] = listID
	return u
}

// SetListName is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetListName(listName string) TodoUpdater {
	u.fields[string(TodoDBSchema.ListName)] = listName
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetName(name string) TodoUpdater {
	u.fields[string(TodoDBSchema.Name)] = name
	return u
}

// SetSource is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetSource(source string) TodoUpdater {
	u.fields[string(TodoDBSchema.Source)] = source
	return u
}

// SetStatus is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetStatus(status string) TodoUpdater {
	u.fields[string(TodoDBSchema.Status)] = status
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u TodoUpdater) SetUpdatedAt(updatedAt time.Time) TodoUpdater {
	u.fields[string(TodoDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SourceEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) SourceEq(source string) TodoQuerySet {
	return qs.w(qs.db.Where("source = ?", source))
}

// SourceIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) SourceIn(source string, sourceRest ...string) TodoQuerySet {
	iArgs := []interface{}{source}
	for _, arg := range sourceRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("source IN (?)", iArgs))
}

// SourceNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) SourceNe(source string) TodoQuerySet {
	return qs.w(qs.db.Where("source != ?", source))
}

// SourceNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) SourceNotIn(source string, sourceRest ...string) TodoQuerySet {
	iArgs := []interface{}{source}
	for _, arg := range sourceRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("source NOT IN (?)", iArgs))
}

// StatusEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) StatusEq(status string) TodoQuerySet {
	return qs.w(qs.db.Where("status = ?", status))
}

// StatusIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) StatusIn(status string, statusRest ...string) TodoQuerySet {
	iArgs := []interface{}{status}
	for _, arg := range statusRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("status IN (?)", iArgs))
}

// StatusNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) StatusNe(status string) TodoQuerySet {
	return qs.w(qs.db.Where("status != ?", status))
}

// StatusNotIn is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) StatusNotIn(status string, statusRest ...string) TodoQuerySet {
	iArgs := []interface{}{status}
	for _, arg := range statusRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("status NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u TodoUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u TodoUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) UpdatedAtEq(updatedAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) UpdatedAtGt(updatedAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) UpdatedAtGte(updatedAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) UpdatedAtLt(updatedAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) UpdatedAtLte(updatedAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs TodoQuerySet) UpdatedAtNe(updatedAt time.Time) TodoQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set TodoQuerySet

// ===== BEGIN of Todo modifiers

type todoDBSchemaField string

func (f todoDBSchemaField) String() string {
	return string(f)
}

// TodoDBSchema stores db field names of Todo
var TodoDBSchema = struct {
	ID          todoDBSchemaField
	CreatedAt   todoDBSchemaField
	UpdatedAt   todoDBSchemaField
	Name        todoDBSchemaField
	Description todoDBSchemaField
	ListID      todoDBSchemaField
	ListName    todoDBSchemaField
	Status      todoDBSchemaField
	CardID      todoDBSchemaField
	BoardID     todoDBSchemaField
	BoardName   todoDBSchemaField
	Source      todoDBSchemaField
}{

	ID:          todoDBSchemaField("id"),
	CreatedAt:   todoDBSchemaField("created_at"),
	UpdatedAt:   todoDBSchemaField("updated_at"),
	Name:        todoDBSchemaField("name"),
	Description: todoDBSchemaField("description"),
	ListID:      todoDBSchemaField("list_id"),
	ListName:    todoDBSchemaField("list_name"),
	Status:      todoDBSchemaField("status"),
	CardID:      todoDBSchemaField("card_id"),
	BoardID:     todoDBSchemaField("board_id"),
	BoardName:   todoDBSchemaField("board_name"),
	Source:      todoDBSchemaField("source"),
}

// Update updates Todo fields by primary key
func (o *Todo) Update(db *gorm.DB, fields ...todoDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":          o.ID,
		"created_at":  o.CreatedAt,
		"updated_at":  o.UpdatedAt,
		"name":        o.Name,
		"description": o.Description,
		"list_id":     o.ListID,
		"list_name":   o.ListName,
		"status":      o.Status,
		"card_id":     o.CardID,
		"board_id":    o.BoardID,
		"board_name":  o.BoardName,
		"source":      o.Source,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Todo %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// TodoUpdater is an Todo updates manager
type TodoUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewTodoUpdater creates new Todo updater
func NewTodoUpdater(db *gorm.DB) TodoUpdater {
	return TodoUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Todo{}),
	}
}

// ===== END of Todo modifiers

// ===== END of all query sets
